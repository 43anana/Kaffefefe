.topnav {
  position: sticky;
  width: 100%;
  height:50px;
  z-index: 1300;
  display: flex;
  flex-direction: row;
  

  &__checkbox {
    display: none;
  }
  &__button {
    background-color: none;
    height: 1.25rem;
    width: 2.35rem;
    position: fixed;
    top: 3rem; //ja also ich find auf figma immer nur pixel..oh man:D das ist jetzt eine beliebige %Zahl
    right: 6%; //das kann ich umrechnen von px..waren 6 rem
    z-index: 2000;
    text-align: center; //er benutztn box shadow (nav part II), do i need?
    @include respond (tablet) {
      display:none;
    }
  }
  &__background {
    width: 1rem;
    height: 0.6rem;
    visibility:hidden;
    position: fixed; //ähnlich wie absolut, kommt eben mit beim scrollen
    top: 4%; //etwas größer damit er safe verschwindet
    right: 8%; //rop und right wie beim button
    background-color: $color-black; //warum brauchen wir den bg? hier setzt er seine farbe und macht ihn später görßer
    z-index: 1000; //geht nur bei definierten positions..
    transition: transform 0.8s; //.8s bis bg auftaucht
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); //was macht das ? hatte das auf figma gesehen
    }
  
  &__nav {
    height: 100vh; //ich hatte erst 66.7rem aber vp ist besser oder? hab auf figma nur absolute pixel gefunden 667:10=67.7
    position: fixed;
    top: 0; //das heißt es fängt in der top right corner an
    right: 0; //schreibe: links:0; um es von links schweben zu lassen
    z-index: 1500; //hinter button vor background
    opacity: 0; //op + width damit links invisible und unklickbar sind
    width: 0;
    transition: all 0.8s; //width+op in .8s auftauchend
    display:flex;
    align-items: center;
    justify-content: flex-start;
  }

  &__list {
   // position: absolute;
    //top: 25.1rem; //251 px von 667 = 37.6% aber geht das hier überhaupt.so schenke man mir gehirn
   // left: 6rem;
   margin-left:10%;
    list-style: none; //text-align wollen wir wenn linksbündig aber das ist gerade default glaub ich
    text-align: left;
    width: 100%;
  }
  &__item {
    margin: 1.2rem, 0; //Abstand Figma 24-28 px, also halt oben unten 1.2rem
  }
  &__link {
    //ist eig ne h3 bei mobile, aber da gibts auch ne margin, sonst noch umschreiben
    text-decoration: none;
    color: $color-white;
    font-weight: 900;
    font-size: 3.2rem;    //display: inline-block; //das macht er im vid, brauch ich das hier?
  }

  //FUNCTIONALITY
  //d.h. label(button) drücken = 1. bg kommt hervor, 2. nav taucht wieder auf

  &__checkbox:checked ~ &__background {
    //~ ist ein sibling
    visibility:visible;     //das muss ich machen, weil meine burgerbox keinen hintergrund oben hat, d.h.man sieht sonst n schwarzes ding
    transform: scale(300); //vergrößert background.
  }
  //wenn ich background wegnehme öffnet sich kein schwarzes fenster mehr, wenn background drin und hierunter op und width
  //weiterhin null:

  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }


  //ICON
  &__icon {
    position: relative;
    &,
    &::before,
    &::after {
      //SEHE NUR NORMAL; KEIN AFTER AND BEFORE
      height: 0.3rem;
      background-color: $color-white;
      display: inline-block;
    }
    &::before,
    &::after {
      content: "";
    }
    & {
      width: 2.4rem;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    &::before {
      position: absolute;
      top: -0.6rem;
      left: 0;
      width: 2.4rem;
    }
    &::after {
      position: absolute;
      top: 0.6rem;
      left: 0;
      width: 1.8rem;
      height: 3px;
    }

    &--x {
      //svg graphik burger menu close
      visibility: hidden;
    }
  }

  //BURGER CLOSE          (1.burger verschwindet, 2. x taucht auf)
  &__checkbox:checked + &__button &__icon {
    //mit + -->adjacent sibling, ohne plus ist es ein child element
    background-color: transparent;
    &::before,
    &::after {
      background-color: transparent;
    }
  }

  &__checkbox:checked + &__button &__icon--x {
    visibility: visible;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}



//////////DESKTOP MENU
.topnav-desktop {
  display:none;
  width:100%;
  @include respond (tablet) {
    display: inline;
    margin-right:0;
    padding-right:7%;
    padding-left:6%;
    position:fixed;
    top:2rem;
    }
    &__list {
      display:flex;
      justify-content: flex-end;
      align-items:center;
    }
    &__item {
      padding-left:10%;
      list-style-type: none;
    }
    &__link {
      font-weight: 500;
      font-size:1.8rem;
      color:$color-white;
      text-decoration: none;
      font-weight: 500;
      font-size:1.8rem;
      color:$color-white;
      text-decoration: none;
      position:relative;
      &::after {        //PRINZIP: erstelle after-Klasse mit der border bottom, positioniere sie, gib ihr transition, gib hover nur auf after! 
        content:"";
        border-bottom:1px solid $color-white;
        width:0;
        height:100%;
        transition:width 0.8s;
        display:inline-block;
        position: absolute;
        left: 0;
        top:0.3rem;
      }
        &:hover::after {      //  FRAGE: warum funzt es nicht, wenn ich den hover einfach bei ::after reinschreibe?
          width:100%;
        }
      
        &:active {
          border-bottom:1px solid $color-white;
        }

    }
  }
  

           /*hatte ich erst bei der normalen nicht after! border-bottom: 1px solid $color-white;
      border-width:0;
      transition:border-width 0.8s;*/


//ALTERNATIVE OHNE SVG VON SCHMETTI, unfertig
/*
&__checkbox:checked + &__button &__icon &--before {       
    transform:rotate(135deg);
    top:0;
}

&__checkbox:checked + &__button &__icon::after {        
    transform:rotate(-135deg);
    top:0;
}
*/
