//CAFE PAGE HEADER --WOHIN?

//CAFE PAGES
.header-cafe {
    width:100%; 
    height:50vh;
    background-image: linear-gradient(rgba(26, 26, 26, 0.3), rgba(26, 26, 26, 0.3)), url(../img/FEND-Coffee-shop-2x.png);
    background-repeat: no-repeat;
    background-size: cover;
    background-position:top;
    display:flex;                  
    flex-direction: column;
    align-items:center;
    justify-content: center;
    @include respond (tablet) {
        width:100%;
        height:60vh; 
        background-position:center;
    }
    @include respond(desk) {
        width:100%;
        height:65vh;//11.97%;//65 vh ..wie oben..i don´t get it.. 681 px von 5688 => 12%
        
    }
}

//CAFE-PAGE CONTENT

.machine-img-box {
    width:70%;
    height:auto;
    margin-left:30%;
    margin-top:10%;
    @include respond (desk) {
      width:50%;
      margin:auto;
    }
}

.gebaeck {
    width:86%;
    margin:10% auto;
    >h3 {
        margin-right:20%;
        margin-bottom:2rem;
    }
    @include respond (desk) {
      width:50%;
      margin:auto;
      padding-bottom:10%; //meistens wenn das padding dann genau ist was sonst die margin ist mache ich das nur um margin:auto schreiben zu können. ich sollte das trotzdem nochmal googlen;-)
        >h3 {
          line-height: 4.9rem;    //wir kommen zurück zur line-height frage..die 1.1%..was sollen die?
          margin-bottom:3rem;
        }
    }
}


.gallery {
  width:86%;
  margin:auto;
  display:flex;
  flex-direction:column;
  flex-wrap: wrap;
  align-items: flex-start;
  max-height: 1030px;
  //VORSCHLAG GIRLS: max-height:calc(100vh/2);
  //column-count:2;
  // .gallery__item--4 {
  //   flex-basis: 100%;
  // }
  @include respond (phone-land){
    max-height:1400px;
  }
  @include respond (tablet) {
    max-height:1800px;
  }
  
  >figure {
    width:48%;
    margin-bottom:1.5rem;
        &:first-child {
      margin-right:4%;
        }
      
      @include respond (desk) {
        width:100%;
        margin-bottom: 0;
      }

    >img {
      width:100%;
      height:auto;
    }
  }



  @include respond (desk) {
    max-width:1240px;
    display:grid;
    grid-template-columns: repeat(4, 1fr); //statt 25% 25% 25% 25%;   sprache: 4 tracks
    grid-template-rows: repeat(4, 2rem);    //falls alle gleich groß sind. falls 1 anders 2 gleich auch mgl: repeat (2, 150px) 200px;
    margin:auto;
    grid-gap:2rem;  //gibt für beide grid-gap: 2rem; aber ich brauche individuelle rows
    //fyi: 1 fr = fraction of available space
    //vgl %:  würde zb 50% genau die hälfte des containers nehmen, ua von den gaps, die anderen fr müssten sich den restlichen space teilen


    &__item {
      width: 100%;
      height:100%;      //er sagt man muss ne height setzen..also schmetti.. geht auch auto?
      object-fit:cover;
      display:block;      //er sagt sonst haben wir da immer so weiße streifen drunter weil quasi wie wenn text..checke ich aber nicht 

      //ALTERNATIVIDEE: set template row to 2rem

      &--1 {
        grid-row: 1 / 6;    //mit span hab ichs irgendwie nicht hinbekommen..aber eig ist dasja pipi einfach..hm:D
        grid-column: 1 / 2;
      }

      &--4 {
        grid-row: 6 / 14;
        grid-column: 1 / 2;
      }

      &--5 {
        grid-row: 1 / 8;
        grid-column: 2 / 3;

      }

      &--8 {
        grid-row: 8 / 14;
        grid-column: 2 / 3;
        display:flex;
        align-items:flex-end;
      }

      &--2 {
        grid-row: 1 / 6;
        grid-column: 3 / 4;
      }

      &--3 {
        grid-row: 6 / 14;
        grid-column: 3 / 4;

      }

      &--7 {
        grid-row: 1 / 8;
        grid-column: 4 / 5;
      }

      &--6 {
        grid-row: 9 / 14;
        grid-column: 4 / 5;
        display:flex;
        align-items:flex-end;
      }
    }
  }
}

/*
    @include respond (phone-land) {
        width:70%;
        margin-left:30%;
        margin-top:10%;
    }
    @include respond (desk) {
        width:50%;
        margin:0;
    }*/
